<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		<bean id = "dataSource" class = "org.apache.commons.dbcp2.BasicDataSource" destroy-method = "close">
		<property name = "driverClassName" value = "oracle.jdbc.driver.OracleDriver"/>
		<property name = "url" value = "jdbc:oracle:thin:@192.168.144.10:1521:xe"/>
		<property name = "username" value = "yse"/>
		<property name = "password" value = "java"/>
	</bean>
	<!-- 
		sqlSessionFactory 는 데이터베이스와 연결을 맺고 끊어질 떄까지의 라이프 사이클을 관리하는 sqlSession객체를 만듭니다
		sqlSessionfacotry 객체의 프로퍼티는 총 두가지 입니다
		1) 데이터소스를 설정하는 프로퍼티
		2) mapper 파일은 실제 쿼리 내용이 담겨있는 파일들입니다.
	 -->

	   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"/>
      <property name="mapperLocations" value="classpath:/sqlmap/**/*_SQL.xml"/>
   </bean>
	<!-- 
		sqlSessionTemplate은 데이터베이스에 개별적으로 쿼리를 실행시키는 객체
		sqlSessionTemplate을 소스코드에서 사용하는 쿼리를 실행시킨다
		sqlSessionTemplate번은 sqlSessionFactory 객체를 생성자로 받고,
		sqlSession 객체가 가지고 있는 데이터베이스 접속 정보와 mapper 파일의 위치를 알 수 있다.
		
	 -->
	<bean id = "sqlSessionTemplate" class = "org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index = "0" ref = "sqlSessionFactory"/>
	</bean>
</beans>
